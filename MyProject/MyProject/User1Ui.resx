<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>